body > * * {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
@supports selector(::after) and selector(:has(*)) and (--custom: properties) {
  .container {
    display: flex;
    gap: 1rem;
  }
  label {
    --star-empty: url(../assets/star-empty.svg);
    --star-filled: url(../assets/star.svg);
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    flex-direction: column;
  }

  input[type="radio"] {
    height: 2rem;
    padding: 0 0.25rem;
    aspect-ratio: 1;
    display: grid;
    place-content: center;
    cursor: pointer;
    appearance: none;
  }

  input[type="radio"]::after {
    content: "";
    background: var(--star-empty) no-repeat center;
    height: inherit;
    aspect-ratio: 1;
    transition: background-image 0.2s ease;
    z-index: 1;
    cursor: pointer;
  }

  
  
  /* Empty stars after the hovered/focused/checked one */
  .container:has(input[type="radio"]:is(:hover, :focus, :checked)) label:has(input[type="radio"]:is(:hover, :focus, :checked)) ~ label input[type="radio"]::after {
    background: var(--star-empty);
  }
  /* Fill stars on hover, focus, or check */
  input[type="radio"]:is(:hover, :focus, :checked)::after,
  .container:has(input[type="radio"]:is(:hover, :focus, :checked)) label:not(:has(input[type="radio"]:is(:hover, :focus, :checked)) ~ label) input[type="radio"]::after {
    background: var(--star-filled);
  }
}
